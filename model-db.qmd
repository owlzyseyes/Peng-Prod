---
title: "Model"
format:
  html:
    code-fold: true
---

```{python}
import duckdb
from palmerpenguins import penguins
from pandas import get_dummies
import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
```

## Get Data

```{python}
con = duckdb.connect('my-db.duckdb')
df = con.execute("SELECT * FROM penguins").fetchdf().dropna()
con.close()
```

## Define Model and Fit

```{python}
X = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)
y = df['body_mass_g']

model = LinearRegression().fit(X, y)
```

## Get some information

```{python}
print(f"R^2 {model.score(X,y)}")
print(f"Intercept {model.intercept_}")
print(f"Columns {X.columns}")
print(f"Coefficients {model.coef_}")
```

```{python}
from pins import board_folder
from vetiver import vetiver_pin_write, VetiverModel, VetiverAPI

example = pd.DataFrame([{
    "bill_length_mm": 45,
    "species_Chinstrap": False,
    "species_Gentoo": False,
    "sex_male": True
}])


v = VetiverModel(model, "my_model",
prototype_data = example)

model_board = board_folder("data/model", allow_pickle_read = True)

vetiver_pin_write(model_board, v)

v.metadata.required_packages = [
    "scikit-learn",
    "pandas",
    "numpy",
    "duckdb",
    "palmerpenguins"
]
```

```{python}
# Creating an API for model predictions

app = VetiverAPI(v, check_prototype = True)
```

```{python}
# Prepare Docker artifacts
vetiver.prepare_docker(model_board,"my_model", 
    version="20250529T221239Z-91fdd", path=".",
    port=8080)
```

```{python}
pins = model_board.pin_list()
print("Available pins:", pins)
```

```{python}
# Get all versions for your specific model
versions = model_board.pin_versions('my_model')
print("\nAvailable versions for my_model:")
for version in versions:
    print(f"Version: {version['version']}")
```
